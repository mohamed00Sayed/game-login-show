{"version":3,"sources":["logo.svg","AddUser.js","Login.js","User.js","UsersList.js","DashBoardControls.js","UsersDashBoard.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["AddUser","state","user","firstname","lastname","username","gamenum","error","addUser","evt","preventDefault","test1","test2","test3","test4","props","isUserExisting","onAdd","togglePage","setState","prev","stageUser","id","target","value","prevState","targetedProp","newUser","this","className","htmlFor","placeholder","onChange","event","type","onClick","Component","Login","User","showOrHide","UsersList","users","map","gameShow","DashBoardControls","hideShowText","btnState","changeButtonText","UsersDashBoard","hideOrShowGames","Game","page","isThere","theUser","App","src","logo","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.697461c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\nclass AddUser extends Component{\n  \n  \tstate={\n    \tuser: {\n        \tfirstname: '',\n          \tlastname: '',\n          \tusername: '',\n          \tgamenum: 0\n        },\n      \terror: 'no'\n    };\n  \n  \taddUser = (evt)=> {\n      \tevt.preventDefault();\n      \tconst user = this.state.user;\n      \tconst test1 = user.firstname !== '';\n      \tconst test2 = user.lastname !== '';\n      \tconst test3 = user.username !== '';\n      \tconst test4 = this.props.isUserExisting(user); //check existence in the parent\n      \n      \t\n    \tif(test1&&test2&&test3&& !test4){\n        \tthis.props.onAdd(user);\n\t\t\tthis.props.togglePage();\n        }else{\n        \tthis.setState((prev)=>({\n            \terror: 'yes'\n            }))\n        }\n    };\n\t\n    stageUser = (evt)=>{\n      \tconst id = evt.target.id;\n      \tconst value = evt.target.value;\n    \tthis.setState((prevState) => {\n        \tconst targetedProp = id;\n          \tconst newUser = prevState.user;\n          \tnewUser[targetedProp] = value;\n          \treturn({\n            \t\tuser: newUser,\n              \t\terror: 'yes'\n            });\n        })\n    };\n    \n  \trender(){\n      \n    \treturn(\n        \t<div>\n          \t\t{\n                \tthis.state.error !=='no'? (<p>Error: missed field or username already taken</p>):(<p></p>)\n                }\n          \t\t<form>\n          \t\t\t<div className='formdiv'>\n                      <div className='first-form-div'>\n                        <fieldset>\n                            <label htmlFor='firstname'>First Name :</label>\n                            <input id='firstname' placeholder='Enter Your First Name' onChange={(event)=> {this.stageUser(event)}}/>\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor='lastname'>Lsat Name :</label>\n                            <input id='lastname' placeholder='Enter Your Last Name' onChange={(event)=> {this.stageUser(event)}}/>\n                        </fieldset>\n                        <fieldset>\n                            <label htmlFor='username'>Username :</label>\n                            <input id='username' placeholder='Enter Your Username' onChange={(event)=> {this.stageUser(event)}}/>\n                        </fieldset>\n                      </div>\n                      <div className='second-form-div'>\n                          <button type='submit' className='onright' onClick={\n\t\t\t\t\t\t\t  (evt)=>{this.addUser(evt)}}>Add</button>\n                          <button className='onright' onClick={()=>{this.props.togglePage()}}>Display Users</button>\n                      </div>\n          \t\t\t</div>\n          \t\t</form>\n          \t</div>\n        )\n    }\n}\n\nexport default AddUser;","import React, { Component } from 'react';\nimport AddUser from './AddUser'\n\nclass Login extends Component{\n\n  \trender(){\n    \treturn(\n        \t<div>\n          \t\t<AddUser onAdd={this.props.onAdd} isUserExisting={this.props.isUserExisting} togglePage={this.props.togglePage}/>\n          \t</div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\n\nclass User extends Component{\n  \n  \t\n\n  \trender(){\n      \tconst text = this.props.showOrHide === 'hide'? (<li>{this.props.user.username}</li>) : (<p>{this.props.user.username} has played \t\t\t\t\t\t\t\t\t\t\t{this.props.user.gamenum} games</p>);\n    \treturn(\n        \t(text)\n        )\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nimport User from './User';\n\nclass UsersList extends Component{\n\n  \trender(){\n    \treturn(\n        \t<ul>\n          \t\t{\n                \tthis.props.users.map((user) => (\n          \t\t\t\t<User key={user.username} user={user} showOrHide={this.props.gameShow}/>\n        \t\t\t))\n                }\n          \t</ul>\n        )\n    }\n}\n\nexport default UsersList;","import React, { Component } from 'react';\n\nclass DashBoardControls extends Component{\n\n  \trender(){\n      \n      \tconst hideShowText = this.props.btnState==='hide'? ('Show the Number of Games Played') : ('Hide the Number of Games Played');\n    \treturn(\n        \t<div>\n          \t\t<div className='dashboard-container'>\n          \t\t\t<button onClick={(evt)=> {this.props.changeButtonText(evt)}}>{hideShowText}</button>\n          \t\t\t<button onClick={()=> {this.props.togglePage()}}>Back</button>\n          \t\t</div>\n          \t</div>\n        )\n    }\n}\n\nexport default DashBoardControls;","import React, { Component } from 'react';\nimport UsersList from './UsersList';\nimport DashBoardControls from './DashBoardControls';\n\nclass UsersDashBoard extends Component{\n  \n  \tstate = {\n    \tbtnState: 'hide'\n    };\n  \n  \thideOrShowGames = (evt) => {\n    \tthis.setState((prevState)=>{\n        \tif(prevState.btnState === 'hide'){\n            \treturn({\n                \tbtnState: 'show'\n                });\n            }else{\n                return({\n                        btnState: 'hide'\n                    });\n            }\n        })\n    };\n\t\n  \trender(){\n    \treturn(\n        \t<div>\n          \t\t<UsersList users={this.props.users} gameShow={this.state.btnState}/>\n          \t\t<DashBoardControls btnState={this.state.btnState} changeButtonText={this.hideOrShowGames} togglePage={this.props.togglePage}/>\n          \t</div>\n        )\n    }\n}\n\nexport default UsersDashBoard;","import React, { Component } from 'react';\nimport Login from './Login';\nimport UsersDashBoard from './UsersDashBoard';\n\nclass Game extends Component{\n  \n\tstate = {\n    \tusers: [\n          \t{firstname: 'Mohamed', lastname: 'Sayed', username: 'sayed55dd', gamenum: 0},\n          \t{firstname: 'Mohammad', lastname: 'Gaber', username: 'gaber5621', gamenum: 0 },\n          \t{firstname: 'Mohamed', lastname: 'Emad', username: 'emadssa7', gamenum: 0}\n        ],\n      \tpage: 'login'\n    };\n  \n  \taddUser = (user) => {\n    \tthis.setState((prevState)=> ({\n        \tusers: [...prevState.users, user]\n        }))\n    };\n  \n  \tisUserExisting = (user)=> {\n      \tlet isThere = false;\n    \tthis.state.users.map((theUser)=> {\n        \tif(theUser.username === user.username){\n            \tisThere = true;\n              \treturn '';\n            }else{return '';}\n        });\n      \treturn isThere;\n    };\n  \n  \ttogglePage=()=>{\n    \tif(this.state.page === 'login'){\n        \tthis.setState({page: 'dashboard'})\n        }else{\n        \tthis.setState({page: 'login'})\n        }\n    };\n  \n    render(){\n      return(\n        <div className='game'>\n        \n        \t{\n        \t\tthis.state.page==='login'? \n        \t\t(<Login onAdd={this.addUser} isUserExisting={this.isUserExisting} togglePage={this.togglePage}/>) : \n\t\t\t\t(<UsersDashBoard users={this.state.users} togglePage={this.togglePage}/>)\n        \t}\n          \n        </div>\n      )\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './Game'\n\n/*\nThis exercise will help you put together and practice all of the concepts you've\nlearned thus far. It will also help you form a strong foundational knowledge of\nReact and prepare you for your first project.\n\nThe instructions for this project are located in the `instructions.md` file.\n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">ReactND - Coding Practice</h1>\n        </header>\n\t\t<Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}